/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soundcloud;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Afrasiyab
 */
public class test extends javax.swing.JFrame {
    /**
     * Creates new form test
     */
    private ManagerSoundCloud soundcloud;
    private static final int NOT_FOUND = -1;
    public static final char EXTENSION_SEPARATOR = '.';
    private static final char UNIX_SEPARATOR = '/';
    private static final char WINDOWS_SEPARATOR = '\\';
    private static File file = null;
    private static test test1;
    DBConnection dbconnection = DBConnection.getInstance();
    
    public test() {
        initComponents();
        soundcloud = new ManagerSoundCloud();
    }
    
    public int isDirectory(File f) {
      if(f == null)
          return 0;
      else if (f.isDirectory()) {
        return 1;
      }
      else if (!f.getName().toUpperCase().endsWith(".PROPERTIES")) {
        return 2;
      }
      else
        return 0;
    }
    
    public static int indexOfExtension(final String filename) {
        if (filename == null) {
            return NOT_FOUND;
        }
        final int extensionPos = filename.lastIndexOf(EXTENSION_SEPARATOR);
        final int lastSeparator = indexOfLastSeparator(filename);
        return lastSeparator > extensionPos ? NOT_FOUND : extensionPos;
    }
    
    public static int indexOfLastSeparator(final String filename) {
        if (filename == null) {
            return NOT_FOUND;
        }
        final int lastUnixPos = filename.lastIndexOf(UNIX_SEPARATOR);
        final int lastWindowsPos = filename.lastIndexOf(WINDOWS_SEPARATOR);
        return Math.max(lastUnixPos, lastWindowsPos);
    }
    
    public static String getExtension(final String filename) {
        if (filename == null) {
            return null;
        }
        final int index = indexOfExtension(filename);
        if (index == NOT_FOUND) {
            return "";
        } else {
            return filename.substring(index + 1);
        }
    }
    
    public Boolean isMp3File(File f)
    {
        if(getExtension(f.toString()).equalsIgnoreCase("mp3"))
            return true;
        return false;
    }

    public Boolean writeFilesToFolder(Path source,Path target)
    {
        Path sourceDirectory = source;
        
        Path targetDirectory = target;

        try {
            Files.copy(sourceDirectory, targetDirectory);
            return true;
        } catch (IOException ex) {
            //Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"File with this name already exists.");
            return false;
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        file_name = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        title = new javax.swing.JTextField();
        singer = new javax.swing.JTextField();
        genre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        url = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 600));

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Attach");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        file_name.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jButton2.setBackground(new java.awt.Color(0, 255, 51));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton2.setText("Upload");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Attachement");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Title");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Singer");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Genre");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Description");

        title.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        singer.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        singer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singerActionPerformed(evt);
            }
        });

        genre.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        description.setColumns(20);
        description.setRows(5);
        jScrollPane1.setViewportView(description);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Url");

        jButton3.setText("<- BACK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(255, 255, 255)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jLabel5))
                                    .addGap(40, 40, 40)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(title)
                                        .addComponent(singer)
                                        .addComponent(genre)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                                        .addComponent(url))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40)
                                .addComponent(file_name, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(file_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(singer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String sourceFolder = "";
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("C:\\Users\\Afrasiyab\\Desktop"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "MP3 Files only", "mp3");
        chooser.setFileFilter(filter);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);       
        
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
            String dirr = "" + chooser.getCurrentDirectory();
            file = chooser.getSelectedFile();
            System.out.println(file.getName());
            
            if(!isMp3File(file) && isDirectory(file)==2){
                JOptionPane.showMessageDialog(null, "Invalid File Format.");
            }
            else if(dirr.substring(dirr.length()-1,dirr.length()).equals(".")){
               dirr = dirr.substring(0,dirr.length()-1);
               sourceFolder=""+dirr + "" + file.getName();
            }
            else{

                sourceFolder=""+dirr + "/" + file.getName();
            }

            file_name.setText(sourceFolder);
        }
        else {
          System.out.println("No Selection ");
        }        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        String FileName = file_name.getText();
        System.out.println(FileName);
        String Url = url.getText();
        String Title = title.getText();
        String Singer = singer.getText();
        String Genre = genre.getText();
        String Description = description.getText();
        
        if(FileName.isEmpty() && Url.isEmpty())
            JOptionPane.showMessageDialog(null,"Attachment or Url is Required.");
        else if(Title.isEmpty())
            JOptionPane.showMessageDialog(null,"Title is Required.");
        else if(Singer.isEmpty())
            JOptionPane.showMessageDialog(null,"Singer is Required.");  
        else if(Genre.isEmpty())
            JOptionPane.showMessageDialog(null,"Genre is Required.");  
        else{
            
            int i = isDirectory(file);
            if(i == 0)
                JOptionPane.showMessageDialog(null, "File Not Selected.");
                //System.out.println("");
            else if(i == 1) // for directories
            {
                int count = 0;
                Path sourceDirectory = Paths.get(FileName);
                Path targetDirectory = Paths.get("C:\\Users\\Ali Arshad\\Documents\\NetBeansProjects\\SoundCloud\\Music\\"+file.getName());
                ArrayList<Song> songs;

                try {
                    Files.copy(sourceDirectory, targetDirectory);
                    songs = new ArrayList<Song>();
                    for (File fileEntry : file.listFiles()) {
                        if (isMp3File(fileEntry)) {
                            sourceDirectory = Paths.get(FileName+"\\"+fileEntry.getName());
                            targetDirectory = Paths.get("C:\\Users\\Ali Arshad\\Documents\\NetBeansProjects\\SoundCloud\\Music\\"+file.getName()+"\\"+fileEntry.getName());
                            writeFilesToFolder(sourceDirectory,targetDirectory);
                            songs.add(new Song(file.getName()));
                            count++;
                        } 
                    }
                    Album a = new Album(songs,"Uploader",Title,Singer,Genre,file.getName(),"Uploader",Description,Url);
                    soundcloud.addAlbum(a);
                    dbconnection.add_album(a,SoundCloud.u);
                    JOptionPane.showMessageDialog(null, count + " MP3 File(s) Uploaded Successfully");                
                } 
                catch (IOException ex) {
                    //Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null," MP3 File Uploaded Successfully");
                }
            }
            else if(i == 2)     //for files
            {    
                Path sourceDirectory = Paths.get(FileName);
                Path targetDirectory = Paths.get("C:\\Users\\Ali Arshad\\Documents\\NetBeansProjects\\SoundCloud\\Music\\"+file.getName());
                if(writeFilesToFolder(sourceDirectory,targetDirectory)){
                    
                Song s = new Song(Title,Singer,Genre,file.getName(),SoundCloud.u.id,Description,Url);
                dbconnection.add_Song(s);
                //soundcloud.addSong(s);
                JOptionPane.showMessageDialog(null," MP3 File Uploaded Successfully");
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void singerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_singerActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        UserHome uh = new UserHome();
        uh.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void showUploadMenu() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                test1 = new test();
                test1.setVisible(true);
            }
        });
    }
    
    public static void unshowUploadMenu(){
        test1.setVisible(false);
    }
    
    

    public static void main(String args[]) throws FileNotFoundException, IOException {
        showUploadMenu();
        
       /*FileInputStream fis = new FileInputStream("Music\\despacito.mp3");
        Player playMP3 = new Player(fis);

        playMP3.play();*/
       
       //java.awt.Desktop.getDesktop().browse(java.net.URI.create("https://soundcloud.com/cokestudio/ya-qurban-khumariyaan-coke-studio-season-11-episode-7"));
       
        /*Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection selection = new StringSelection("yesyesyes");
        clipboard.setContents(selection, selection);*/
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea description;
    private javax.swing.JTextField file_name;
    private javax.swing.JTextField genre;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField singer;
    private javax.swing.JTextField title;
    private javax.swing.JTextField url;
    // End of variables declaration//GEN-END:variables
}