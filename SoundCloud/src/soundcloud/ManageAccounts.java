/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soundcloud;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ibrahim
 */
public class ManageAccounts extends javax.swing.JFrame {

    Admin admin = Admin.getInstance("Gul Nawaz", "fsdf", "sfsfd", "dfs");   //temporary
    DBConnection conn = DBConnection.getInstance();
    DefaultTableModel dtm;
    ResultSet x;
    /**
     * Creates new form ManageAccounts
     */
    public ManageAccounts() {
        this.setResizable(false);
        x = conn.getAllUsers();
        dtm = DBConnection.buildTableModel(x);
        initComponents();
        this.adminname.setText("Welcome " + admin.name);

        
//JScrollPane jsp = new JScrollPane(table);
        
//        JOptionPane.showMessageDialog(null, new JScrollPane(table));
        
    }

    public ManageAccounts(Admin a) {
        this.setResizable(false);
        x = conn.getAllUsers();
        dtm = DBConnection.buildTableModel(x);
        initComponents();
        this.adminname.setText("Welcome " + a.name);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adminname = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userlist =  new JTable(dtm);
        resetPassword = new javax.swing.JButton();
        blockUser = new javax.swing.JButton();
        deleteUser = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        adminname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        adminname.setText("Welcome");

        userlist.setAutoCreateColumnsFromModel(false);
        jScrollPane1.setViewportView(userlist);

        resetPassword.setText("Reset Password");
        resetPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPasswordActionPerformed(evt);
            }
        });

        blockUser.setText("Block User");
        blockUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockUserActionPerformed(evt);
            }
        });

        deleteUser.setText("Delete User");
        deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserActionPerformed(evt);
            }
        });

        jButton1.setText("Sign Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Review Songs");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(adminname, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resetPassword)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(blockUser, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetPassword)
                    .addComponent(blockUser)
                    .addComponent(deleteUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPasswordActionPerformed
        // TODO add your handling code here:
        this.userlist.setRowSelectionAllowed(true);
        int selected_row = this.userlist.getSelectedRow();
        int user_id = (int) this.userlist.getValueAt(selected_row, 0);
        String name = (String) this.userlist.getValueAt(selected_row, 1);
        String email = (String) this.userlist.getValueAt(selected_row, 2);
        
        JPasswordField pas = new JPasswordField(40);
        JLabel abc = new JLabel("Enter new Password for name: " + name);
        
        int ok = JOptionPane.showConfirmDialog(null, pas,"Change Password", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        
        if (ok==JOptionPane.OK_OPTION)
        {
            admin.changePassword(user_id, pas.getText());            
            String[] Emails = new String[1];
            Emails[0]=email;
            String message = "Your account password has changed. \n Email: "+ email +"\n Password: "+pas.getText()+"\n";
            JOptionPane.showMessageDialog(rootPane, "Password of " + name + " changed");
            
            //use real emails to actually send
            conn.sendEmail(SoundCloud.my_email, SoundCloud.my_pass, Emails, "Password changed", message);
            JOptionPane.showMessageDialog(rootPane, "Email notification sent to " + email + ".");
        }

    }//GEN-LAST:event_resetPasswordActionPerformed

    private void blockUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockUserActionPerformed
        // TODO add your handling code here:
        int selected_row = this.userlist.getSelectedRow();
        int user_id = (int) this.userlist.getValueAt(selected_row, 0);
        String name = (String) this.userlist.getValueAt(selected_row, 1);
        String email = (String) this.userlist.getValueAt(selected_row, 2);
        JDialog.setDefaultLookAndFeelDecorated(true);
        Object[] selectionValues = { "One Week", "One Month" };
        String initialSelection = "One Week";
        Object selection = JOptionPane.showInputDialog(null, "For how long do you want to block the User?","Block User", JOptionPane.QUESTION_MESSAGE, null, selectionValues, initialSelection);
        String date="";
        if (selection.toString().equals("One Week"))
        {
            date = admin.blockUser(user_id, 7);
            this.userlist.setValueAt(date, selected_row, 4);
            JOptionPane.showMessageDialog(rootPane, name + " has been blocked for " + selection.toString().toLowerCase() + ".");            
            String[] Emails = new String[1];
            Emails[0]=email;
            String message = "Your account with email "+ email +"password has been blocked for "+ selection.toString().toLowerCase() + ".\n";
            
            //use real emails to actually send
            conn.sendEmail(SoundCloud.my_email, SoundCloud.my_pass, Emails, "Password changed", message);
            JOptionPane.showMessageDialog(rootPane, "Email notification sent to " + email + ".");
        }
        else
        {
            date = admin.blockUser(user_id, 30);     
            this.userlist.setValueAt(date, selected_row, 4);
            JOptionPane.showMessageDialog(rootPane, name + " has been blocked for " + selection.toString().toLowerCase() + ".");            
            String[] Emails = new String[1];
            Emails[0]=email;
            String message = "Your account with email "+ email +"password has been blocked for "+ selection.toString().toLowerCase() + ".\n";
            
            //use real emails to actually send
            String sender_email="";
            String sender_password="";
            
            conn.sendEmail(SoundCloud.my_email, SoundCloud.my_pass, Emails, "Password changed", message);
            JOptionPane.showMessageDialog(rootPane, "Email notification sent to " + email + ".");
        }
        
    }//GEN-LAST:event_blockUserActionPerformed

    private void deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserActionPerformed
        // TODO add your handling code here:
        int selected_row = this.userlist.getSelectedRow();
        int user_id = (int) this.userlist.getValueAt(selected_row, 0);
        String name = (String) this.userlist.getValueAt(selected_row, 1);
        String email = (String) this.userlist.getValueAt(selected_row, 2);

        int input = JOptionPane.showConfirmDialog(null, "Do you want to permanently delete "+ name +"?", "Select an Option...",
				JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        
        if (input==0)
        {
            conn.permanentlyDelete(user_id);
            String[] Emails = new String[1];
            Emails[0]=email;
            String message = "Your account with the following details has been deleted. \n Name: "+ name +" \n Email: "+ email +"\n\n\n Thankyou for using SoundCloud.";
            JOptionPane.showMessageDialog(rootPane, "Account of " + name + " has been deleted");
            
            //use real emails to actually send
            String sender_email="";
            String sender_password="";
            
            conn.sendEmail(SoundCloud.my_email, SoundCloud.my_pass, Emails, "Password changed", message);
            JOptionPane.showMessageDialog(rootPane, "Email notification sent to " + email + ".");
            this.dispose();
            ManageAccounts ma = new ManageAccounts();
            ma.setVisible(true);
        }
    }//GEN-LAST:event_deleteUserActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        ReviewSong uh = new ReviewSong();
        uh.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        StartPage sp = new StartPage();
        sp.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageAccounts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adminname;
    private javax.swing.JButton blockUser;
    private javax.swing.JButton deleteUser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetPassword;
    private javax.swing.JTable userlist;
    // End of variables declaration//GEN-END:variables
}
